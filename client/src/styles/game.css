/* Base styles */
html,
body {
    margin: 0;
    padding: 0;
    overflow: hidden;
    height: 100%;
    user-select: none;
}

.app {
    width: 100vw;
    height: 100vh;
    background: #1a1a1a;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Game container */
.game-container {
    width: 100%;
    height: 100%;
    position: relative;
    touch-action: none;
    display: flex;
    justify-content: center;
    align-items: center;
}

.game-board {
    width: 1200px;
    height: 800px;
    background: #000;
    position: relative;
    overflow: hidden;
    border: 2px solid #333;
}

/* HUD */
.hud {
    position: absolute;
    top: 20px;
    left: 20px;
    color: white;
    font-family: monospace;
    font-size: 20px;
    z-index: 100;
    text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);
}

/* Player */
.player {
    width: 32px;
    height: 32px;
    background: #00ff00;
    position: absolute;
    border-radius: 50%;
    transform-origin: center;
    transition: all 0.05s linear;
    box-shadow: 0 0 10px #00ff00;
    transform: translate(-50%, -50%);
    z-index: 10;
}

/* Enemy */
.enemy {
    width: 24px;
    height: 24px;
    background: #ff0000;
    position: absolute;
    border-radius: 4px;
    transform-origin: center;
    transition: all 0.1s linear;
    box-shadow: 0 0 10px #ff0000;
    transform: translate(-50%, -50%);
    z-index: 5;
}

.enemy-health {
    position: absolute;
    top: -20px;
    width: 100%;
    text-align: center;
    color: white;
    font-size: 12px;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
}

/* Debug shot */
.debug-shot {
    position: absolute;
    color: #00ff00;
    font-family: monospace;
    font-size: 12px;
    text-shadow: 0 0 5px #00ff00;
    white-space: nowrap;
    transform: translate(-50%, -50%);
    pointer-events: none;
    z-index: 8;
}

.debug-shot::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    background: #00ff00;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    box-shadow: 0 0 5px #00ff00;
}

/* Movement states */
.player.moving {
    box-shadow: 0 0 15px #00ff00;
}

.player.dashing {
    box-shadow: 0 0 25px #00ff00;
    animation: dashPulse 0.15s ease-in-out;
}

/* Grid background */
.game-board::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background-image:
        linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
    background-size: 40px 40px;
    transform-origin: center center;
    pointer-events: none;
}

/* CRT effect */
.game-board::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(rgba(18, 16, 16, 0) 50%,
            rgba(0, 0, 0, 0.25) 50%);
    background-size: 100% 4px;
    pointer-events: none;
    z-index: 2;
    opacity: 0.15;
}

/* Animations */
@keyframes dashPulse {
    0% {
        transform: translate(-50%, -50%) scale(1);
    }

    50% {
        transform: translate(-50%, -50%) scale(1.2);
    }

    100% {
        transform: translate(-50%, -50%) scale(1);
    }
}

/* Enemy hit animation */
.enemy.hit {
    animation: enemyHit 0.2s ease-in-out;
}

@keyframes enemyHit {
    0% {
        transform: translate(-50%, -50%) scale(1);
        filter: brightness(1);
    }

    50% {
        transform: translate(-50%, -50%) scale(1.2);
        filter: brightness(2);
    }

    100% {
        transform: translate(-50%, -50%) scale(1);
        filter: brightness(1);
    }
}

/* Death animation */
.enemy.dying {
    animation: death 0.5s ease-out forwards;
}

@keyframes death {
    0% {
        transform: translate(-50%, -50%) scale(1) rotate(0deg);
        opacity: 1;
    }

    100% {
        transform: translate(-50%, -50%) scale(0) rotate(180deg);
        opacity: 0;
    }
}

/* Player damage flash */
.player.damaged {
    animation: damageFlash 0.2s ease-in-out;
}

@keyframes damageFlash {
    0% {
        filter: brightness(1);
    }

    50% {
        filter: brightness(3) saturate(2);
    }

    100% {
        filter: brightness(1);
    }
}

.player.charging {
    animation: charge 1s linear;
}

.debug-shot.charged {
    color: #ff3333;
    font-size: 14px;
    text-shadow: 0 0 8px #ff3333;
}

.debug-shot.charged::before {
    background: #ff3333;
    height: 3px;
    box-shadow: 0 0 8px #ff3333;
}

@keyframes charge {
    0% {
        filter: brightness(1);
        transform: translate(-50%, -50%) scale(1);
    }

    100% {
        filter: brightness(2);
        transform: translate(-50%, -50%) scale(1.2);
    }
}